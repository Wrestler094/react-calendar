import React from 'react';
import {useParams, useNavigate, Link} from "react-router-dom";
import {useSelector, useDispatch} from "react-redux";
import {addClass} from "../../redux/classes";
import {ToastContainer, toast} from "react-toastify";
import {nanoid} from "nanoid";
import "./Day.scss"



export default function Day() {
    const months = ["–Ø–Ω–≤–∞—Ä—è", "–§–µ–≤—Ä–∞–ª—è", "–ú–∞—Ä—Ç–∞", "–ê–ø—Ä–µ–ª—è", "–ú–∞—è", "–ò—é–Ω—è", "–ò—é–ª—è", "–ê–≤–≥—É—Å—Ç–∞", "–°–µ–Ω—Ç—è–±—Ä—è", "–û–∫—Ç—è–±—Ä—è", "–ù–æ—è–±—Ä—è", "–î–µ–∫–∞–±—Ä—è"]
    const [selectedGroup, setSelectedGroup] = React.useState("no-select")
    const { day } = useParams()
    const dispatch = useDispatch()
    const navigate = useNavigate()
    const groupList = useSelector(state => state.groups)
    const classList = useSelector(state => state.dates)
    const year= day.split('-')[0]
    const month = day.split('-')[1]
    const date = day.split('-')[2]

    const goBack = () => {
        navigate(-1)
    }

    function getClasses() {
        return (classList && classList[day]) ?
            classList[day].map(item => (
                <div className="single-day" key={nanoid()}>
                    <h3 className="single-day__heading">{item.name} {item.isFinished ? "üó∏" : null}</h3>
                    <Link
                        className={`${item.isFinished ? "button button--yellow" : "button button--green"}`}
                        to={`/dashboard/day/${day}/group/${item.id}`}>
                        {item.isFinished ? "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç—å" : "–û—Ç–º–µ—Ç–∏—Ç—å –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç—å"}
                    </Link>
                </div>)) :
            <p>–í —ç—Ç–æ—Ç –¥–µ–Ω—å –Ω–µ –±—ã–ª–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ –∑–∞–Ω—è—Ç–∏—è</p>
    }

    const handleSend = () => {
        if (selectedGroup === "no-select") {
            toast.error("–ì—Ä—É–ø–ø–∞ –Ω–µ –≤—ã–±—Ä–∞–Ω–∞")
        } else {
            const group = groupList.find(elem => elem.id === selectedGroup)
            dispatch(addClass(day, group))
            setSelectedGroup('no-select')
        }
    }

    function getGroups() {
        return groupList ?
            <div className="day__add">
                <p>–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–Ω—è—Ç–∏–µ</p>
                <div className="single-day__wrapper">
                    <select
                        className="add-field add-field--day"
                        value={selectedGroup}
                        onChange={(evt) => setSelectedGroup(evt.target.value)}>
                            <option value="no-select">–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É</option>
                            {groupList.map(item => <option key={nanoid()} value={item.id}>{item.name}
                            </option>)}
                    </select>
                    <button
                        className="button button--bigger"
                        onClick={handleSend}>
                        –î–æ–±–∞–≤–∏—Ç—å –∑–∞–Ω—è—Ç–∏–µ
                    </button>
                </div>
            </div> :
            <p className="day__add">–í—ã –Ω–µ —Å–æ–∑–¥–∞–ª–∏ –µ—â—ë –Ω–∏ –æ–¥–Ω–æ–π –≥—Ä—É–ø–ø—ã. –ß—Ç–æ–±—ã –¥–æ–±–∞–≤–ª—è—Ç—å –∑–∞–Ω—è—Ç–∏—è –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É –≥—Ä—É–ø–ø—É.</p>
    }

    return (
        <main className="page-main">
            <div className="page-wrapper">
                <div className="page-head">
                    <span className="page-head__link-back" onClick={goBack}>–ù–∞–∑–∞–¥</span>
                    <h1>{date} {months[`${month - 1}`]} {year}</h1>
                </div>
                <div className="page-body">
                    {getClasses()}
                </div>
                    {getGroups()}
            </div>
            <ToastContainer />
        </main>
    );
};

